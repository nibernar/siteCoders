# This is the development docker-compose file for the Coder's API project.

services:
  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    container_name: coders-frontend
    networks:
      - frontend-network
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}" 
    environment:
      - VITE_API_URL=${VITE_API_URL}
      - FRONTEND_PORT=${FRONTEND_PORT}
    #depends_on:
      #backend:
        # condition: service_healthy  # TODO: uncomment when backend is ready
    volumes:
      - ./front:/app
    command: ["npm", "run", "dev"]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:${FRONTEND_PORT}"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  backend:
    container_name: coders-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    networks:
      - frontend-network  # Connexion au réseau frontend pour communiquer avec le frontend
      - backend-network   # Connexion au réseau backend pour communiquer avec la base de données
    ports:
    - "${BACKEND_PORT}:${BACKEND_PORT}"
    environment:
      - PORT=${BACKEND_PORT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET:-dev_jwt_secret_key}
      - NODE_ENV=development
    volumes:
      - ./backend:/app
    command: ["npm", "run", "dev"]
    depends_on:
      database:
        condition: service_healthy
    #TODO : fix this
    # healthcheck:
    #   test: ["CMD", "wget", "-qO-", "http://localhost:${BACKEND_PORT}/health"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    restart: unless-stopped

  database:
    image: mysql:8.0
    container_name: coders-database
    networks:
      - backend-network
    volumes:
      - db_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  db_data:
    name: coders-db-data

networks:
  frontend-network:
    name: coders-frontend-network
  backend-network:
    name: coders-backend-network